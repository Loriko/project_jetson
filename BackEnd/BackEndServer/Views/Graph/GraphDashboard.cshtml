@using BackEndServer.Models.Enums
@model BackEndServer.Models.ViewModels.CameraInformation

<h1 class="page-title center-align">Statistics and Trends</h1>

<script type="text/javascript">
    google.charts.load('current', { packages: ['corechart', 'line'] });
    google.charts.setOnLoadCallback(drawChart);
    function drawChart() {
        // Define the chart to be drawn.
        @{
            if (Model.GraphStatistics != null)
            {
                <text>    
                    var array = @Html.Raw(Json.Serialize(Model.GraphStatistics.Stats));
                    for (i = 1; i < array.length; i++) {
                        array[i][0] = new Date(array[i][0]);
                        array[i][1] = parseInt(array[i][1]);
                    }

                    var data = new google.visualization.arrayToDataTable(array);

                    var options = {
                        legend: { position: 'bottom' },
                        explorer: { 
                            actions: ['dragToZoom', 'rightClickToReset'],
                            axis: 'horizontal',
                            keepInBounds: true,
                            maxZoomIn: 110.0
                        },
                        vAxis: {minValue: 0}
                    }

                    // Instantiate and draw the chart.
                    var chart = new google.visualization.LineChart(document.getElementById('curve_chart'));
                    chart.draw(data, options);
                </text>
            }
        }
    }
</script>

@* <script type="text/javascript"> *@
@*     google.charts.load('current', { packages: ['corechart', 'line'] }); *@
@*     google.charts.setOnLoadCallback(drawChart); *@
@*     function drawChart() { *@
@*         // Define the chart to be drawn. *@
@*         var array = @Html.Raw(Json.Serialize(Model.GraphStatistics.Stats)); *@
@*         for (i = 0; i < array.length; i++) { *@
@*             array[i][1] = parseInt(array[i][1]); *@
@*             array[i][0] = new Date(parseInt(array[i][0])); *@
@* *@
@*         } *@
@* *@
@*         var data = new google.visualization.DataTable(); *@
@*         data.addColumn('datetime', 'Time'); *@
@*         data.addColumn('number', 'People'); *@
@* *@
@*         data.addRows(array); *@
@* *@
@* *@
@* *@
@*         var options = { *@
@*             legend: { position: 'bottom' } *@
@* *@
@*         } *@
@* *@
@*         // Instantiate and draw the chart. *@
@*         var chart = new google.visualization.LineChart(document.getElementById('curve_chart')); *@
@*         chart.draw(data, options); *@
@* *@
@*     } *@
@* </script> *@


<div class="row">
    @* <div class="input-field col s2"> *@
    @*     <input type="text" class="datepicker"> *@
    @*     <label>Start Date</label> *@
    @* </div> *@
    @* <div class="input-field col s2"> *@
    @*     <input type="text" class="datepicker"> *@
    @*     <label>End Date</label> *@
    @* </div> *@
    @* <div class="input-field col s5"></div> *@
    <div class="col s8">
        <ul class="tabs">
            <li class="tab" onclick="reloadGraph('@PastPeriod.LastDay')"><a class="teal-text @(Model.GraphStatistics.selectedPeriod == PastPeriod.LastDay ? "active" : "")" href="#past_day">Past Day</a></li>
            <li class="tab" onclick="reloadGraph('@PastPeriod.LastWeek')"><a class="teal-text @(Model.GraphStatistics.selectedPeriod == PastPeriod.LastWeek ? "active" : "")" href="#past_week">Past Week</a></li>
            <li class="tab" onclick="reloadGraph('@PastPeriod.LastMonth')"><a class="teal-text @(Model.GraphStatistics.selectedPeriod == PastPeriod.LastMonth ? "active" : "")" href="#past_month">Past Month</a></li>
            <li class="tab" onclick="reloadGraph('@PastPeriod.LastYear')"><a class="teal-text @(Model.GraphStatistics.selectedPeriod == PastPeriod.LastYear ? "active" : "")" href="#past_year">Past Year</a></li>
            <div class="indicator teal" style="z-index:1"></div>
        </ul>
    </div>
    <div class="input-field col s4">
        <select>
            <option value="" disabled>Measured Values</option>
            <option value="1">Avg number of People</option>
            <option selected="" value="2">Max Number of People</option>
            <option value="3">Min Number of People</option>
        </select>
        <label>Select Value to Measure</label>
    </div>
</div>


<div class="row">
    <div class="col s12">
        <div class="card">
            <div class="card-content">
                <div id="past_day" class="card-title center-align">Number of people spotted by @Model.CameraName over the past day</div>
                <div id="past_week" class="card-title center-align">Number of people spotted by @Model.CameraName over the past week</div>
                <div id="past_month" class="card-title center-align">Number of people spotted by @Model.CameraName over the past month</div>
                <div id="past_year" class="card-title center-align">Number of people spotted by @Model.CameraName over the past year</div>
                <div id="curve_chart"></div>
            </div>
        </div>
    </div>
</div>

<script>
    function reloadGraph(pastPeriod) {
        document.location = "GraphDashboard?cameraId=" + "@Model.CameraId" + "&pastPeriod=" + pastPeriod;
    }
</script>